
const qs = require('querystring'); // provides utilities for parsing and formatting URL query strings

//The names of these 2 constant variables describe what they do. Yes, I found `emailRegexp` on the web.
const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
const phoneRegex = /^[0-9]{3}\-[0-9]{3}\-[0-9]{4}$/

/*
  Function is the start of the Feedback form validation.
  It calls other functions. It should send back an object
  if there are any errors. 
*/
exports.validateForm = function(dirty) {
  var attributes = qs.parse(dirty);
  var errors = '';
  for(let attr in attributes) {
    // 'title-name' has no validation, so skip it
    if (attr == 'title-name') { continue; }
    switch(attr) {
      case 'email': 
        if (!emailValidation(attributes[attr])) {
          errors += "\"Email\" is a required field and must be a valid email\n";
        }
        break;
      case 'phone':
        if (!phoneValidation(attributes[attr])) {
          errors += "\"Phone Num\" must be in the form of ###-###-#### to be valid";
        }
        break;
      default:
        if (!simpleStringValidation(attributes[attr],attr)) {
          switch(attr) {
            case 'body-text':
              errors += "\"Message\" is a required field";
              break;
            default:
              errors += "\"" + titleCase(attr.replace('_', ' ')) + "\" is a required field";
          }
        }
      
    }
  }
  if (errors === '') {
    // There are no errors
    return true;
  }
  else {
    return errors;
  }
};

// Tests if `dirty` matches the regex
function emailValidation(dirty) {
  return emailRegexp.test(dirty);
}

// Tests if `dirty` matches the regex
function phoneValidation(dirty) {
  if (dirty == "") { return true; }
  return phoneRegex.test(dirty);
}

// For the form attributes that use this, only some sort of value is required
function simpleStringValidation(dirty, attr) {
  return (dirty.length > 0);
}

// Function titlizes a phrase
function titleCase(dirty) {
  var splitStr = dirty.toLowerCase().split(' ');
  var strLen = splitStr.length; // This is to prevent from having to call the same function multiple times
  for (var i = 0; i < strLen; i++) {
    splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     
  }
  // Directly return the joined string
  return splitStr.join(' '); 
}